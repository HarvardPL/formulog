input nums(i32, i32, i32)
nums(1, 2, 3).
nums(4, 3, 1).
nums(1, 3, 6).

input num(i32)
num(6).
num(12).
num(18).

input empty

input full
full.

fun sum(Xs: i32 list) : i32 =
  match Xs with
  | [] => 0
  | X :: Xs => X + sum(Xs)
  end

fun mulAndSum(Xs: (i32 * i32 * i32) list) : i32 =
  match Xs with
  | [] => 0
  | (X1, X2, X3) :: Xs => X1 * X2 * X3 + mulAndSum(Xs)
  end

output agg1(i32)

agg1(X) :- X = sum(nums(_1, ??, _2)).

output agg2(i32)

agg2(X) :- X = sum(nums(_1, 3, ??)).

output ok
ok :-
  sum(num(??)) = 36,
  mulAndSum(nums(??, ??, ??)) = 36,
  agg1(8),
  agg2(7),
  !empty,
  full.
